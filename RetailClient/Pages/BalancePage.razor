@page "/balance"
<PageTitle>Balance Page</PageTitle>
<h3>Balance: @userBalance.ToString("0.00")</h3>

<form>
    <div>
        <label for="userName"> User Name:</label>
        <input type="text" id="userName" class="form-control" @bind="userName"/>
    </div>
    <button type="button" class="btn btn-primary" @onclick="SubmitUsername">Check</button>
    <div>
        <label for="balanceModification">Amount:</label>
        <input type="number" id="balanceModification" class="form-control" @bind="balanceModification" disabled="@(!balanceRetrieved || balanceModificationDisabled)" min="0" step="0.01"/>
        <div>
            <div>
                <input type="radio" id="deposit" name="transactionType"  value="deposit" @onchange="e => selectedTransactionType = e.Value.ToString()" disabled="@(!balanceRetrieved)" />
                <label for="deposit">Deposit</label>
            </div>
            <div>
                <input type="radio" id="withdrawl" name="transactionType" value="withdrawl" @onchange="e => selectedTransactionType = e.Value.ToString()"  disabled="@(!balanceRetrieved)" />
                <label for="withdrawl">Withdrawl</label>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-primary" @onclick="SubmitTransaction" disabled="@(!balanceRetrieved || balanceModificationDisabled)"> Submit Transaction</button>
</form>

@code {
         /*
         * "balance-of <username>" maps to <username>'s balance;
         *  you will have a front end page to allow a user to give their username
         * and then view their balance and make deposits and withdrawls
         * 
         * user name input and returnbalance fromt he gateway
         * make other feilds not useable
         * make another input field where the user can put an amount of money and then
         * a select to determine if its a withdrawl or a deposite and check if its valid for the 
         * current balance( for a withdrawl and check input).
    */
    private string userName;
    private decimal userBalance = 0.0m;
    private bool balanceRetrieved;
    private decimal balanceModification;
    private bool balanceModificationDisabled;
    private string selectedTransactionType;

    private void SubmitUsername()
    {
        userBalance = 10.0m;
        //get the balance from the gateway
        balanceRetrieved = true;
        balanceModificationDisabled = false;
    }
    private void SubmitTransaction()
    {
        if(selectedTransactionType == "deposit")
        {
            userBalance += balanceModification;
        }
        else if (selectedTransactionType == "withdrawl")
        { 
            userBalance = userBalance - balanceModification; 
            if(userBalance < 0)
            {
                userBalance = userBalance + balanceModification;
                Console.WriteLine("Balance can't give you that amount");
            }
        }

        balanceModification = 0;
    }
    
}
